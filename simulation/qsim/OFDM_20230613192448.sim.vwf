/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data";
}

SIGNAL("Data_Conj")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Data_Conj[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Data_Conj[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Data_Conj";
}

SIGNAL("Serial_Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Serial_Out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("Serial_Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Serial_Out";
}

SIGNAL("ShiftReg1_load_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ShiftReg2_load_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ShiftReg2_load_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ShiftReg2_load_sel";
}

SIGNAL("ShiftReg2_load_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ShiftReg2_load_sel";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PLL_clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("Data[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 720.0;
		}
	}
}

TRANSITION_LIST("Data[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("Data[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("Data[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 720.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("Data_Conj[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("Serial_Out[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 1259.18;
			LEVEL 1 FOR 135.604;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 135.604;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 128.18;
		}
	}
}

TRANSITION_LIST("Serial_Out[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 629.59;
			LEVEL 1 FOR 145.29;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 145.29;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 150.133;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 150.133;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 276.051;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 133.023;
		}
	}
}

TRANSITION_LIST("Serial_Out[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 314.795;
			LEVEL 1 FOR 150.133;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 150.133;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 295.423;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 140.447;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 140.447;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 276.051;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 24.215;
			LEVEL 1 FOR 108.808;
		}
	}
}

TRANSITION_LIST("Serial_Out[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 77.488;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 77.488;
			LEVEL 0 FOR 154.976;
			LEVEL 1 FOR 72.645;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 72.645;
			LEVEL 0 FOR 82.331;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 67.802;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 67.802;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 62.959;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 62.959;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 58.116;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 58.116;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 31.32;
		}
	}
}

TRANSITION_LIST("Serial_Out[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 77.488;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 33.901;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 33.901;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 43.587;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 29.058;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 29.058;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 24.215;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 24.215;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 38.744;
			LEVEL 0 FOR 31.32;
		}
	}
}

TRANSITION_LIST("Serial_Out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 38.744;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 24.215;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 43.587;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 14.529;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 19.372;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 11.948;
		}
	}
}

TRANSITION_LIST("Serial_Out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 24.215;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 19.372;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 9.686;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 2.262;
		}
	}
}

TRANSITION_LIST("Serial_Out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL Z FOR 317.217;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 14.529;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 9.686;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 4.843;
			LEVEL 1 FOR 4.843;
			LEVEL 0 FOR 2.262;
		}
	}
}

TRANSITION_LIST("ShiftReg1_load_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("ShiftReg2_load_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 315.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 305.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 305.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 305.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 305.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 305.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 130.0;
		}
	}
}

TRANSITION_LIST("ShiftReg2_load_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 305.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 305.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 305.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 305.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 305.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 130.0;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("reset_n")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("PLL_clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.421;
			LEVEL 0 FOR 2.422;
			LEVEL 1 FOR 2.262;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PLL_clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "Data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "Data_Conj[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftReg1_load_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftReg2_load_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftReg2_load_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftReg2_load_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
}

DISPLAY_LINE
{
	CHANNEL = "Serial_Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 25;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
